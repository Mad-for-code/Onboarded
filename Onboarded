Yes, you can render an HTML page in a `@GetMapping` function in a Spring Boot application. This is typically done using a templating engine like Thymeleaf. Here's how you can do it:

### 1. **Set Up Thymeleaf Dependency**

First, ensure you have the Thymeleaf dependency in your `pom.xml` (for Maven) or `build.gradle` (for Gradle) file.

**Maven:**

```xml
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-thymeleaf</artifactId>
</dependency>
```

**Gradle:**

```groovy
implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
```

### 2. **Create a Controller**

Create a Spring Boot controller with a `@GetMapping` method to render the HTML page.

```java
package com.example.demo.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class MyController {

    @GetMapping("/approval")
    public String getApprovalPage(@RequestParam(name = "psid", required = false) String psid, Model model) {
        model.addAttribute("psid", psid);
        return "approval"; // Thymeleaf template name (without .html)
    }
}
```

In this example, `@GetMapping("/approval")` maps the `/approval` URL to the `getApprovalPage` method. The method adds an attribute `psid` to the model, which can be accessed in the Thymeleaf template.

### 3. **Create Thymeleaf Template**

Create an HTML file in the `src/main/resources/templates` directory.

**`src/main/resources/templates/approval.html`**:

```html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <title>Approval Page</title>
</head>
<body>
    <h1>Employee Details</h1>
    <p>PSID: <span th:text="${psid}"></span></p>
    <!-- Add more fields as needed -->
</body>
</html>
```

### 4. **Run the Application and Access the URL**

Start your Spring Boot application and access the URL in your browser:

```
http://localhost:8080/approval?psid=123
```

You should see the `approval.html` page rendered with the `psid` value displayed.

### Troubleshooting

- **404 Not Found**: Ensure the URL matches the mapping in your controller.
- **Circular View Path Error**: Ensure there is no recursion in view names and controller mappings.
- **Check Thymeleaf Configuration**: Ensure Thymeleaf is correctly configured in your `application.properties`.

**`application.properties`** (optional, default configuration is usually sufficient):

```properties
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
```

### Summary

To render an HTML page in a `@GetMapping` function using Spring Boot and Thymeleaf:

1. Add Thymeleaf dependency.
2. Create a controller with a `@GetMapping` method.
3. Create a Thymeleaf template in `src/main/resources/templates`.
4. Run the application and access the URL to see the rendered HTML page.

This approach allows you to dynamically render HTML pages with data passed from the controller.
